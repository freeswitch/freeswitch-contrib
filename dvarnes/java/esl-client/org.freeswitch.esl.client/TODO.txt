As at 2010.08.29

Features still to be implemented
 * [Fixed]: Fix the event parser to properly use Content-Length header, reports of misshandling missing \n 
 * Problem using latest netty release in an OSGi container
 * Chase down the apparent issue with Netty when using executor in pipeline (wierd).
 * Improve exception handling - implement exceptionCaught()
 * More testing of the outbound socket client template code
 * Implement Send event command
 * Testing of SendMsg command 
 * Refactor the api of the inbound client into the abstract handler so it is also available in outbound handlers as well
 * Per event(s) listener
 * Provide XML event handling - not sure if this is useful since the raw event is not exposed, although it could be if needed.
 * Implement 'myevent' event subscription for inbound - not a priority here, easy if required.
 * Provide timeout protection on the client.sendSyncApiCommand().  It will currently block for ever if get no response from server.
 * Working examples in an example project (started).
 * Add OSGi example 
  
Distribution
 * [Fixed - using Sonatype] Find out how (if ok) to put binary distribution on files.freeswitch.org
 * [Done] Cut a release, look at usage of tags in FS git repo.
 * [Started] FreeSWITCH wiki pages
 * Basic usage docs
 * Package jar, javadocs, source and dependencies (slf4j, netty) for people to trial without having to build.
 * Host the javadoc API somewhere in the org.freeswitch domain .. files ?
 
Quality items
 * [No] Is there a git equivalent to svn $Id$ tag ?
 * Ask FS dev team for any ESL event generation test strategies/suites.
 * Are all message header names in the enum ?
 * Improve Javadoc coverage
 * Add cross references to the FS wiki in the Javadocs .. eg list of api commands and events.
 * Add unit test coverage
 * Investigate availability of FS JIRA for issue tracking
