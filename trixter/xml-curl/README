This is an example that will respond to mod_xml_curl requests for information.
It uses modules, which are contained in the modules subdirectory.  If a module
(any file ending in .php) is in the dir it will be loaded.  If it registers
to handle a specific type of xml_curl request, that will be passed to the 
function named.  If you dont have a module for a specific type of data, for 
example directory, then a 404 will be returned to FreeSWITCH.  

The module nature allows you to more easily turn on/off different components.  

Its a template based system, which relies on someone authenticating, such as 
with .htaccess.  Their username is used in this default example for their 
configuration files.  This allows for multiple switches to identify themselves
uniquely, as well as giving you the ability to have different templates for 
different switches.





If you do configuration via mod_xml_curl you only need to load and configure 
mod_xml_curl from freeswitch.xml, all other modules and their configs do not 
need to be present.  I do suggest that you load loggers before xml_curl though.

If you load modules *before* loading xml_curl they will be loaded from the
static xml file, only *after* loading xml_curl will stuff start to be pulled
from the webserver.  Seems logical but some people dont think about it and 
wonder why it doesnt work.



freeswitch.xml in this repository is a minimal config file, which works as of
r5500 with what is in this directory.


DEFAULT PASSWORDS
htaccess switch1:password (for webstuff)
SIP/etc  testacct:demopw

you will most likely have to edit the path to .htpasswd in the .htaccess
file or it wont work properly.


PREREQUISITES
You will need to get smarty from http://smarty.php.net to make this work

If you install it globally, edit your php.ini to make the Smarty/libs dir as 
part of the search path, otherwise add the following to curlrouting.php near 
the other ini_set line.  Adjust it to suit your particular setup.

ini_set("include_path",".:/usr/local/lib/php:/usr/share/php:./Smarty-2.6.18/libs");



You also must create a directory named templates_c where you install this, its
a smarty requirement for caching templates.  This directory *must* be writable
by the webserver or Smarty will not properly operate.
